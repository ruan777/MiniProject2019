#include<idc.idc>


static main(){
    auto pSSL_accept = LocByName("SSL_accept");
    auto pSSL_clear = LocByName("SSL_clear");
    auto pSSL_get_rbio = LocByName("SSL_get_rbio");
    
    auto hdSSL_clear_xrefs = Get_xrefs(pSSL_clear,"fssl_clear");
    auto hdSSL_accept_xrefs = Get_xrefs(pSSL_accept,"fssl_accpet");
    auto hdSSL_getrbio_xrefs = Get_xrefs(pSSL_get_rbio,"fssl_get_rbio");
   
    auto dtls1_listen_addr = Search_dtls1_listen(hdSSL_accept_xrefs,hdSSL_getrbio_xrefs);
    
    Message("dtls1_listen at: 0x%x",dtls1_listen_addr);
    
    if(Find_element(hdSSL_clear_xrefs,dtls1_listen_addr) != -1)
        Warning("CVE-2015-0207 fixed! :)");	
    else
        Warning("CVE-2015-0207 not fixed! :(");
    	
}

//find all xrefs of func
static Get_xrefs(func_addr,array_name){
    auto id = CreateArray(array_name);
    if(id == -1){
        Warning("Can't create Array!");
        return -1;
    }
      
    auto addr = RfirstB(func_addr);
    auto idx = 0;
    auto func_start = 0;
    while(addr != BADADDR){
        func_start = GetFunctionAttr(addr,FUNCATTR_START);
        SetArrayLong(id,idx,func_start);
        addr = RnextB(func_addr,addr);
        idx = idx + 1;
    }
    return id;
}
//search position of value in an array
static Find_element(id,value){
    auto idx = 0;
    for( idx = GetFirstIndex(AR_LONG,id);idx != -1;idx= GetNextIndex(AR_LONG,id,idx))
            if(value == GetArrayElement(AR_LONG,id,idx))
                return idx;
    //not found 
    return -1;
}

static Search_dtls1_listen(id1,id2){
    //if can find directly by name
    auto addr = LocByName("dtls1_listen");
    if(addr != BADADDR)
        return addr;
    addr = LocByName("DTLSv1_listen");
    if(addr != BADADDR)
        return addr;
    //search equal element in two array
    auto idx1 = 0;
    auto idx2 = 0;
    auto v1 = 0;
    for( idx1 = GetFirstIndex(AR_LONG,id1); idx1 != -1; idx1 = GetNextIndex(AR_LONG,id1,idx1)){
        
        v1 = GetArrayElement(AR_LONG,id1,idx1);
        
        for( idx2 = GetFirstIndex(AR_LONG,id2); idx2 != -1; idx2 = GetNextIndex(AR_LONG,id2,idx2)){
            if(v1 == GetArrayElement(AR_LONG,id2,idx2)) //found!
                return v1;
        }
    }
    return -1;//not found
}
