from idaapi import *

def Get_addr_by_name(func_list,func_name):
  for i in func_list:
    if i[1] == func_name:
      return i[0]
  return -1

#return a list of function's xrefs			
def Get_xrefs(func_addr):
  res = []
  for xrefs in XrefsTo(func_addr):
    func_start = get_func(xrefs.frm).startEA
    res.append(func_start)
    return res
  
def Get_dtls1_listen_Addr(list1,list2):
  #if can find directly by name
  addr = Get_addr_by_name(funcs,"dtls1_listen")
    if addr != -1:
      return addr

  addr = Get_addr_by_name(funcs,"DTLSv1_listen")
    if addr != -1:
      return addr
	
  for addr in list1:
    if addr in list2: #found
      return addr
  #not found
  return -1
def main():
  pSSL_clear = Get_addr_by_name(funcs,"SSL_clear")
  pSSL_accept = Get_addr_by_name(funcs,"SSL_accept")
  pSSL_get_rbio = Get_addr_by_name(funcs,"SSL_get_rbio")

  lSSL_clear = Get_xrefs(pSSL_clear)
  lSSL_accept = Get_xrefs(pSSL_accept)
  lSSL_get_rbio = Get_xrefs(pSSL_get_rbio)
  
  dtls1_listen_addr = Get_dtls1_listen_Addr(lSSL_accept,lSSL_get_rbio)
  print hex(dtls1_listen_addr)

if __name__ == "__main__":
  funcs = [x for x in Names()]  #func_list[(ea1,name1),(ea2,name2)....]
  main() 

